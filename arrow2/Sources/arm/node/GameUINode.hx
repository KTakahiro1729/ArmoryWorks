package arm.node;

@:keep class GameUINode extends armory.logicnode.LogicTree {

	public function new() { super(); notifyOnAdd(add); }

	override public function add() {
		var _SendEvent = new armory.logicnode.SendEventNode(this);
		var _Sleep = new armory.logicnode.SleepNode(this);
		var _CanvasSetText = new armory.logicnode.CanvasSetTextNode(this);
		var _OnEvent = new armory.logicnode.OnEventNode(this);
		_OnEvent.property0 = "Hit";
		_OnEvent.addOutputs([_CanvasSetText]);
		_CanvasSetText.addInput(_OnEvent, 0);
		_CanvasSetText.addInput(new armory.logicnode.StringNode(this, "HitText"), 0);
		var _ConcatenateString = new armory.logicnode.ConcatenateStringNode(this);
		_ConcatenateString.addInput(new armory.logicnode.StringNode(this, "Hit! "), 0);
		var _GetProperty = new armory.logicnode.GetPropertyNode(this);
		_GetProperty.addInput(new armory.logicnode.ObjectNode(this, "ControllTarget"), 0);
		_GetProperty.addInput(new armory.logicnode.StringNode(this, "HitCounter"), 0);
		_GetProperty.addOutputs([_ConcatenateString]);
		_ConcatenateString.addInput(_GetProperty, 0);
		_ConcatenateString.addInput(new armory.logicnode.StringNode(this, " times"), 0);
		_ConcatenateString.addOutputs([_CanvasSetText]);
		_CanvasSetText.addInput(_ConcatenateString, 0);
		_CanvasSetText.addOutputs([_Sleep]);
		_Sleep.addInput(_CanvasSetText, 0);
		_Sleep.addInput(new armory.logicnode.FloatNode(this, 2.0), 0);
		_Sleep.addOutputs([_SendEvent]);
		_SendEvent.addInput(_Sleep, 0);
		_SendEvent.addInput(new armory.logicnode.StringNode(this, "Erase"), 0);
		_SendEvent.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_SendEvent.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetText_001 = new armory.logicnode.CanvasSetTextNode(this);
		var _OnEvent_001 = new armory.logicnode.OnEventNode(this);
		_OnEvent_001.property0 = "Erase";
		_OnEvent_001.addOutputs([_CanvasSetText_001]);
		_CanvasSetText_001.addInput(_OnEvent_001, 0);
		_CanvasSetText_001.addInput(new armory.logicnode.StringNode(this, "HitText"), 0);
		_CanvasSetText_001.addInput(new armory.logicnode.StringNode(this, ""), 0);
		_CanvasSetText_001.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetText_002 = new armory.logicnode.CanvasSetTextNode(this);
		var _Merge = new armory.logicnode.MergeNode(this);
		var _OnEvent_002 = new armory.logicnode.OnEventNode(this);
		_OnEvent_002.property0 = "Hit";
		_OnEvent_002.addOutputs([_Merge]);
		_Merge.addInput(_OnEvent_002, 0);
		var _OnInit = new armory.logicnode.OnInitNode(this);
		_OnInit.addOutputs([_Merge]);
		_Merge.addInput(_OnInit, 0);
		_Merge.addOutputs([_CanvasSetText_002]);
		_CanvasSetText_002.addInput(_Merge, 0);
		_CanvasSetText_002.addInput(new armory.logicnode.StringNode(this, "FromTargetText"), 0);
		var _ConcatenateString_001 = new armory.logicnode.ConcatenateStringNode(this);
		var _Math = new armory.logicnode.MathNode(this);
		_Math.property0 = "Add";
		_Math.property1 = "false";
		var _GetProperty_001 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_001.addInput(new armory.logicnode.ObjectNode(this, "ControllTarget"), 0);
		_GetProperty_001.addInput(new armory.logicnode.StringNode(this, "y"), 0);
		_GetProperty_001.addOutputs([_Math]);
		_Math.addInput(_GetProperty_001, 0);
		_Math.addInput(new armory.logicnode.FloatNode(this, 4.0), 0);
		_Math.addOutputs([_ConcatenateString_001]);
		_ConcatenateString_001.addInput(_Math, 0);
		_ConcatenateString_001.addInput(new armory.logicnode.StringNode(this, "m from target"), 0);
		_ConcatenateString_001.addOutputs([_CanvasSetText_002]);
		_CanvasSetText_002.addInput(_ConcatenateString_001, 0);
		_CanvasSetText_002.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetTransform = new armory.logicnode.CanvasSetTransformNode(this);
		var _Print = new armory.logicnode.PrintNode(this);
		_Print.addInput(new armory.logicnode.NullNode(this), 0);
		var _GetProperty_002 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_002.addInput(new armory.logicnode.ObjectNode(this, "ControllBow"), 0);
		_GetProperty_002.addInput(new armory.logicnode.StringNode(this, "FirePower"), 0);
		var _Math_003 = new armory.logicnode.MathNode(this);
		_Math_003.property0 = "Subtract";
		_Math_003.property1 = "false";
		_Math_003.addInput(_GetProperty_002, 0);
		var _Float_003 = new armory.logicnode.FloatNode(this);
		_Float_003.addInput(new armory.logicnode.FloatNode(this, 3.0), 0);
		var _Math_002 = new armory.logicnode.MathNode(this);
		_Math_002.property0 = "Subtract";
		_Math_002.property1 = "false";
		var _Float_002 = new armory.logicnode.FloatNode(this);
		_Float_002.addInput(new armory.logicnode.FloatNode(this, 30.0), 0);
		_Float_002.addOutputs([_Math_002]);
		_Math_002.addInput(_Float_002, 0);
		_Math_002.addInput(_Float_003, 0);
		var _Math_004 = new armory.logicnode.MathNode(this);
		_Math_004.property0 = "Divide";
		_Math_004.property1 = "false";
		var _Math_001 = new armory.logicnode.MathNode(this);
		_Math_001.property0 = "Subtract";
		_Math_001.property1 = "false";
		var _Float = new armory.logicnode.FloatNode(this);
		_Float.addInput(new armory.logicnode.FloatNode(this, 428.0), 0);
		_Float.addOutputs([_Math_001]);
		_Math_001.addInput(_Float, 0);
		var _Float_001 = new armory.logicnode.FloatNode(this);
		_Float_001.addInput(new armory.logicnode.FloatNode(this, 685.0), 0);
		var _Math_006 = new armory.logicnode.MathNode(this);
		_Math_006.property0 = "Add";
		_Math_006.property1 = "false";
		_Math_006.addInput(_Float_001, 0);
		var _Math_005 = new armory.logicnode.MathNode(this);
		_Math_005.property0 = "Multiply";
		_Math_005.property1 = "false";
		_Math_005.addInput(_Math_004, 0);
		_Math_005.addInput(_Math_003, 0);
		_Math_005.addOutputs([_Math_006]);
		_Math_006.addInput(_Math_005, 0);
		_Math_006.addOutputs([_CanvasSetTransform]);
		_Float_001.addOutputs([_Math_001, _Math_006]);
		_Math_001.addInput(_Float_001, 0);
		_Math_001.addOutputs([_Math_004]);
		_Math_004.addInput(_Math_001, 0);
		_Math_004.addInput(_Math_002, 0);
		_Math_004.addOutputs([_Math_005]);
		_Math_002.addOutputs([_Math_004]);
		_Float_003.addOutputs([_Math_002, _Math_003]);
		_Math_003.addInput(_Float_003, 0);
		_Math_003.addOutputs([_Math_005]);
		_GetProperty_002.addOutputs([_Math_003, _Print]);
		_Print.addInput(_GetProperty_002, 0);
		_Print.addOutputs([_CanvasSetTransform]);
		_CanvasSetTransform.addInput(_Print, 0);
		_CanvasSetTransform.addInput(new armory.logicnode.StringNode(this, "PowerButton"), 0);
		var _CanvasGetTransform = new armory.logicnode.CanvasGetTransformNode(this);
		_CanvasGetTransform.addInput(new armory.logicnode.StringNode(this, "PowerButton"), 0);
		_CanvasGetTransform.addOutputs([_CanvasSetTransform]);
		_CanvasGetTransform.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_CanvasGetTransform.addOutputs([_CanvasSetTransform]);
		_CanvasSetTransform.addInput(_CanvasGetTransform, 0);
		_CanvasSetTransform.addInput(_Math_006, 0);
		_CanvasSetTransform.addInput(_CanvasGetTransform, 2);
		_CanvasSetTransform.addOutputs([new armory.logicnode.NullNode(this)]);
		var _OnUpdate = new armory.logicnode.OnUpdateNode(this);
		_OnUpdate.addOutputs([new armory.logicnode.NullNode(this)]);
		var _Math_007 = new armory.logicnode.MathNode(this);
		_Math_007.property0 = "Sine";
		_Math_007.property1 = "false";
		_Math_007.addInput(new armory.logicnode.FloatNode(this, 0.5), 0);
		_Math_007.addInput(new armory.logicnode.FloatNode(this, 0.5), 0);
		_Math_007.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
	}
}
